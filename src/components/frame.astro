---
import { Picture } from 'astro:assets';
import type { Edition } from '../content.config';
import Draw from './draw.astro';

interface Props {
  edition: Edition;
  preview?: boolean;
}

const { edition, preview } = Astro.props;
---

<div
  class:list={[
    'frame-container inline-block max-w-full shadow-lg shadow-stone-600/50 md:shadow-xl',
    preview ? 'w-full' : '',
  ]}
  transition:name={`frame-${edition.id}`}
>
  <div
    class:list={[
      'edition-images relative aspect-[3/4] border-12 border-stone-600 border-t-stone-800 border-l-stone-800 bg-white',
      'flex items-center justify-center inset-shadow-sm inset-shadow-stone-500 backface-hidden transform-3d',
      preview
        ? 'w-full md:max-h-92'
        : 'max-h-[50vh] w-full lg:h-screen lg:max-h-[85vh] lg:border-24',
    ]}
  >
    {
      edition.images.map((image, i) => (
        <Picture
          src={image.file}
          alt={image.alt}
          class:list={[
            'h-full w-full object-contain mix-blend-darken',
            i === 0 ? 'block' : 'hidden',
          ]}
          widths={preview ? [320] : [320, 800]}
          sizes={preview ? '320px' : '(max-width: 1000px) 320px, 800px'}
          formats={['avif']}
          pictureAttributes={{ class: 'contents' }}
          loading={'eager'}
        />
      ))
    }
    <Draw />
    <div
      class="pointer-events-none absolute inset-0 flex flex-col items-center justify-center gap-2 bg-stone-600/80 px-4 text-center text-white opacity-0 backdrop-blur-xs motion-safe:transition-opacity"
      id="info-overlay"
    >
      {edition.images.map((i) => <p>{i.alt}</p>)}
    </div>
  </div>
</div>

<script>
  let interval: any;

  function setupRotation() {
    document
      .querySelectorAll<HTMLDivElement>('.frame-container')
      .forEach((container) => {
        const images = container.querySelectorAll<HTMLImageElement>(
          '.edition-images img'
        );

        if (images.length > 0) {
          let currentIndex = 0;

          function showImage(index: number) {
            images.forEach((img, i) => {
              img.style.display = i === index ? 'block' : 'none';
            });
          }

          showImage(currentIndex);

          interval = setInterval(() => {
            currentIndex = (currentIndex + 1) % images.length;
            showImage(currentIndex);
          }, 5000);
        }
      });
  }

  document.addEventListener('astro:page-load', () => {
    clearInterval(interval);
    setupRotation();
  });
</script>
